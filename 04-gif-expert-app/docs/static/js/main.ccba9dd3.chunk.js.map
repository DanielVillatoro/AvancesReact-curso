{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACQ,0BAAMC,SAVK,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,OAOV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBQ,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,Y,uBCJlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,yBAAKc,UAAU,8CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDR2BK,CAAa1B,GAAjCa,EALuB,EAK7BN,KAAca,EALe,EAKfA,QAItB,OACI,kBAAC,WAAD,KACI,wBAAIJ,UAAU,0CAA0ChB,GACvDoB,GAAW,uBAAGJ,UAAU,qCAAb,iBACZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEYjBkB,EA9BM,WAAM,MAGa1C,mBAAS,CAAC,WAHvB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KAUvB,OACI,kBAAC,WAAD,KACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAACT,EAAU8B,GAAX,OACX,kBAAC,EAAD,CACIH,IAAK3B,EACLA,SAAUA,U,MCtBtC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.ccba9dd3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n    const [inputValue, setinputValue] = useState('');//''\r\n    const handleInputChange=(e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setcategories(cats=>[inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n    \r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ddM335DlMsK1A2R5kyKeBdHs9Tz9m4mA`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    // console.log(gifs);\r\n    //setimages(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    // console.log(id, title, url);\r\n    return (\r\n        <div className='card animate__animated animate__backInDown'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState, useEffect, Fragment } from 'react'\r\nimport React, { Fragment } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    // const [images, setimages] = useState([]);\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    // getGifs();\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=' animate__animated animate__backInDown'>{category}</h3>\r\n            {loading && <p className=' animate__animated animate__flash'>'Cargando...'</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map(img =>\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category])\r\n\r\n    return state;   //{data[],loading:true}\r\n}\r\n\r\n\r\n","import React, { Fragment, useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories=['Carros','Barcos','Helicopteros','Trenes'];\r\n    const [categories, setcategories] = useState(['Carros']);\r\n\r\n    // const handleAdd=()=>{\r\n    //     const newElemento='Aviones';\r\n    //     setcategories([...categories,newElemento]);\r\n    // }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setcategories={setcategories} />\r\n            <hr />\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map((category, i) =>\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp.js';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}